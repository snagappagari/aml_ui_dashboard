trigger:
  - main

pool:
  name: MySelfHostedPool  # Your self-hosted agent pool

variables:
  imageName: 'aml-ui-dashboard'
  acrLoginServer: 'acrall.azurecr.io'
  tag: '$(Build.BuildId)'
  acrUsername: 'acrall'  # ACR username
  acrPassword: '$(acrPassword)'  # ACR password (set this as a secret variable in Azure DevOps)

steps:
# Checkout source code
- checkout: self

# Install Node.js (for building the frontend)
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

# Install dependencies and build
- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

# Authenticate Docker to ACR
- script: |
    echo $(acrPassword) | docker login $(acrLoginServer) -u $(acrUsername) --password-stdin
  displayName: 'Docker login to ACR'

# Build and push Docker image to ACR
- script: |
    docker buildx create --use || true
    docker buildx build --platform linux/amd64 \
      -t $(acrLoginServer)/$(imageName):$(tag) \
      -t $(acrLoginServer)/$(imageName):latest \
      --push .
  displayName: 'Build and push Docker image to ACR'

# Deploy the app to AKS using kubectl and ARM connection
- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'sc-new'               # Your existing Azure service connection
    azureResourceGroup: 'devops-connection'           # AKS resource group name
    kubernetesCluster: 'aks-all'                      # Your AKS cluster name
    useClusterAdmin: true
    namespace: 'default'
    command: apply
    useConfigurationFile: true
    configuration: 'deployment.yaml'