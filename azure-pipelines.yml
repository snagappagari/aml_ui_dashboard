trigger:
  - main

pool:
  name: MySelfHostedPool  # Your self-hosted agent pool

variables:
  imageName: 'aml-ui-dashboard'
  acrLoginServer: 'acrall.azurecr.io'
  tag: '$(Build.BuildId)'
  azureSubscription: 'sc-new'  # Your Azure service connection name
  acrName: 'acrall'
  resourceGroup: 'devops-connection'
  aksCluster: 'aks-all'

steps:
# Checkout source code
- checkout: self

# Install Node.js (for building the frontend)
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

# Install dependencies and build
- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

# Authenticate to ACR using Azure CLI
- task: AzureCLI@2
  displayName: 'Login to ACR'
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr login --name $(acrName)

# Build and push Docker image to ACR
- script: |
    docker buildx create --use || true
    docker buildx build --platform linux/amd64 \
      -t $(acrLoginServer)/$(imageName):$(tag) \
      -t $(acrLoginServer)/$(imageName):latest \
      --push .
  displayName: 'Build and push Docker image to ACR'

# Deploy to AKS using kubectl
- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: '$(azureSubscription)'
    azureResourceGroup: '$(resourceGroup)'
    kubernetesCluster: '$(aksCluster)'
    useClusterAdmin: true
    namespace: 'default'
    command: 'apply'
    useConfigurationFile: true
    configuration: 'deployment.yaml'